{"version":3,"file":"static/js/33.8284c140.chunk.js","mappings":"uTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,uFACVF,EAAAA,EAAAA,IAAU,uBAAwBE,GADxB,cAC3BC,EAD2B,OAEjCC,QAAQC,IAAIF,EAASG,KAAKC,SAFO,kBAG1BJ,EAASG,KAAKC,SAHY,2CAAH,sDAMnBC,EAAc,mCAAG,WAAOC,EAASP,GAAhB,uFACLF,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWP,GAD1B,cACtBC,EADsB,yBAErBA,EAASG,MAFY,2CAAH,wDAKdI,EAAoB,mCAAG,WAAOD,EAASP,GAAhB,uFACXF,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuCP,GAD5B,cAC5BC,EAD4B,yBAE3BA,EAASG,KAAKK,MAFa,2CAAH,wDAKpBC,EAAqB,mCAAG,WAAOH,EAASP,GAAhB,uFACZF,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuCP,GAD3B,cAC7BC,EAD6B,yBAE5BA,EAASG,KAAKC,SAFc,2CAAH,wDAKrBM,EAAgB,mCAAG,WAAOC,EAASC,GAAhB,uFACPf,EAAAA,EAAAA,IAAA,yBACrBgB,OAAQ,CACNC,SAAU,QACVC,MAAOJ,EACPK,eAAe,IAEdJ,IAPyB,cACxBZ,EADwB,yBASvBA,EAASG,KAAKC,SATS,2CAAH,uD,uKCxBhBa,EAAUC,EAAAA,GAAAA,IAAH,+DAKPC,EAAcD,EAAAA,GAAAA,IAAH,+CAIXE,GAASF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,oPAcNI,EAAQJ,EAAAA,GAAAA,GAAH,0C,2BC+ClB,EAlEqB,WAAO,IAAD,IACzB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQnB,GAAYoB,EAAAA,EAAAA,MAAZpB,QACFqB,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,YAEjDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBAEtBC,EAAY,mCAAG,8GAES/B,EAAAA,EAAAA,KAAgBC,EAAS,CACjD+B,OAAQH,EAAgBG,SAHT,OAEXC,EAFW,OAKjBb,EAASa,GALQ,gDAOjBrC,QAAQC,IAAI,KAAMqC,SAPD,yDAAH,qDAYlB,OAFAH,IAEO,WACLF,EAAgBM,OACjB,CACF,GAAE,CAAClC,IAEJ,IAAQmC,EAAgEjB,EAAhEiB,MAAOC,EAAyDlB,EAAzDkB,aAAcC,EAA2CnB,EAA3CmB,SAAUC,EAAiCpB,EAAjCoB,OAAQC,EAAyBrB,EAAzBqB,YAAaC,EAAYtB,EAAZsB,QAE5D,OACE,iCACE,2BACE,SAAC,MAAD,OAEF,SAAC1B,EAAD,CAAQ2B,GAAIlB,EAAUmB,QAAtB,sBACA,UAAC/B,EAAD,YACE,gBACEgC,IAAG,8CAAyCJ,GAC5CK,MAAM,MACNC,IAAKL,KAEP,UAAC3B,EAAD,YACE,SAACG,EAAD,UAAQmB,KACR,0CAAiC,GAAfC,GAAmBU,UAArC,SACA,sCACA,uBAAIT,KACJ,oCACA,uBAAIC,GAAUA,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,KAAO,GAAjB,aAGlC,0BACG,IADH,0BAGE,yBACE,SAAC,KAAD,CAAMR,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["FetchAPI.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTljNGVmNDAyODAwODUxODhjZWZjMmU4N2FmNmEwYyIsInN1YiI6IjY0MTk3YmI2MzEwMzI1MDA4NmY5OTkzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.q-ovqu-7T5oRDliML0kPyxUZJ15bJ1hjveunlXRTE9s';\n\nexport const fetchTrendingMovies = async param => {\n  const response = await axios.get('/trending/movie/week', param);\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}`, param);\n  return response.data;\n};\n\nexport const fetchMovieActorsById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, param);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviewsById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, param);\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async (request, extraParam) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      language: 'en-US',\n      query: request,\n      include_adult: false,\n    },\n    ...extraParam,\n  });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-top: 15px;\n  display: flex;\n`;\n\nexport const Description = styled.div`\n  padding-left: 25px;\n`;\n\nexport const GoBack = styled(Link)`\n  /* margin-bottom: 30px; */\n  text-decoration: none;\n  padding: 3px 5px;\n  margin-left: 10px;\n  border-radius: 5px;\n  border: 1px solid black;\n  color: black;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieById } from 'FetchAPI';\nimport { Wrapper, Description, GoBack, Title } from './MovieDetails.styled';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    const fetchedMovie = async () => {\n      try {\n        const selectMovie = await fetchMovieById(+movieId, {\n          signal: abortController.signal,\n        });\n        setMovie(selectMovie);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchedMovie();\n\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path, tagline } = movie;\n\n  return (\n    <>\n      <span>\n        <BsArrowLeft />\n      </span>\n      <GoBack to={goBackRef.current}>Go back</GoBack>\n      <Wrapper>\n        <img\n          src={`https://image.tmdb.org/t/p/original/${poster_path}`}\n          width=\"300\"\n          alt={tagline}\n        />\n        <Description>\n          <Title>{title}</Title>\n          <p> User Score: {(vote_average * 10).toFixed()} %</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres && genres.map(genre => genre.name + ' ')}</p>\n        </Description>\n      </Wrapper>\n      <ul>\n        {' '}\n        Additional information\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","fetchTrendingMovies","param","response","console","log","data","results","fetchMovieById","movieId","fetchMovieActorsById","cast","fetchMovieReviewsById","fetchSearchMovie","request","extraParam","params","language","query","include_adult","Wrapper","styled","Description","GoBack","Link","Title","useState","movie","setMovie","useParams","location","useLocation","goBackRef","useRef","state","from","useEffect","abortController","AbortController","fetchedMovie","signal","selectMovie","message","abort","title","vote_average","overview","genres","poster_path","tagline","to","current","src","width","alt","toFixed","map","genre","name","Suspense","fallback","Loader"],"sourceRoot":""}