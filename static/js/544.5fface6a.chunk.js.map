{"version":3,"file":"static/js/544.5fface6a.chunk.js","mappings":"wTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAmB,mCAAG,WAAMC,GAAN,uFACVF,EAAAA,EAAAA,IAAU,uBAAwBE,GADxB,cAC3BC,EAD2B,OAEjCC,QAAQC,IAAIF,EAASG,KAAKC,SAFO,kBAG1BJ,EAASG,KAAKC,SAHY,2CAAH,sDAMnBC,EAAc,mCAAG,WAAOC,EAASP,GAAhB,uFACLF,EAAAA,EAAAA,IAAA,iBAAoBS,GAAWP,GAD1B,cACtBC,EADsB,yBAErBA,EAASG,MAFY,2CAAH,wDAKdI,EAAoB,mCAAG,WAAOD,EAASP,GAAhB,uFACXF,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuCP,GAD5B,cAC5BC,EAD4B,yBAE3BA,EAASG,KAAKK,MAFa,2CAAH,wDAKpBC,EAAqB,mCAAG,WAAOH,EAASP,GAAhB,uFACZF,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAuCP,GAD3B,cAC7BC,EAD6B,yBAE5BA,EAASG,KAAKC,SAFc,2CAAH,wDAKrBM,EAAgB,mCAAG,WAAOC,EAASC,GAAhB,uFACPf,EAAAA,EAAAA,IAAA,yBACrBgB,OAAQ,CACNC,SAAU,QACVC,MAAOJ,EACPK,eAAe,IAEdJ,IAPyB,cACxBZ,EADwB,yBASvBA,EAASG,KAAKC,SATS,2CAAH,uD,wFCxBhBa,EAAOC,EAAAA,GAAAA,GAAH,2HAQJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wH,SCRTG,EAAa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GAC7C,OACE,SAACP,EAAD,UACGK,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAACR,EAAD,CACEK,GAAkB,kBAAPA,EAAkBA,EAAKA,EAAGG,GACrCC,MAAO,CAAEC,KAAMN,GAFjB,SAIGG,KALIC,EADC,KAYjB,C,kHCgBD,UA5Ba,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACMR,GAAWS,EAAAA,EAAAA,MAqBjB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,IAAIC,gBACtBC,EAAW,mCAAG,8GAEatC,EAAAA,EAAAA,IAAoB,CAC/CuC,OAAQH,EAAgBG,SAHV,OAEVC,EAFU,OAKhBrC,QAAQC,IAAIoC,GACZP,EAAUO,GANM,gDAQhBrC,QAAQC,IAAI,KAAMqC,SARF,yDAAH,qDAYjB,OADAH,IACO,WACLF,EAAgBM,OACjB,CACF,GAAE,KAGD,SAAC,IAAD,CAAYlB,OAAQA,EAAQE,GAAI,SAAAG,GAAE,uBAAcA,EAAd,EAAoBJ,SAAUA,GAEnE,C","sources":["FetchAPI.js","components/MoviesLIst/MoviesList.styled.js","components/MoviesLIst/MoviesList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4YTljNGVmNDAyODAwODUxODhjZWZjMmU4N2FmNmEwYyIsInN1YiI6IjY0MTk3YmI2MzEwMzI1MDA4NmY5OTkzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.q-ovqu-7T5oRDliML0kPyxUZJ15bJ1hjveunlXRTE9s';\n\nexport const fetchTrendingMovies = async param => {\n  const response = await axios.get('/trending/movie/week', param);\n  console.log(response.data.results);\n  return response.data.results;\n};\n\nexport const fetchMovieById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}`, param);\n  return response.data;\n};\n\nexport const fetchMovieActorsById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}/credits`, param);\n  return response.data.cast;\n};\n\nexport const fetchMovieReviewsById = async (movieId, param) => {\n  const response = await axios.get(`/movie/${movieId}/reviews`, param);\n  return response.data.results;\n};\n\nexport const fetchSearchMovie = async (request, extraParam) => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      language: 'en-US',\n      query: request,\n      include_adult: false,\n    },\n    ...extraParam,\n  });\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    color: orangered;\n  }\n`;\n","import { List, MovieLink } from 'components/MoviesLIst/MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies, location, to }) => {\n  return (\n    <List>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <MovieLink\n            to={typeof to === 'string' ? to : to(id)}\n            state={{ from: location }}\n          >\n            {title}\n          </MovieLink>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  location: PropTypes.shape({}).isRequired,\n  to: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'FetchAPI';\nimport { useLocation } from 'react-router-dom';\n\nimport { MoviesList } from 'components/MoviesLIst/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const fetchMovies = async () => {\n      try {\n        const trendingMovies = await fetchTrendingMovies({\n          signal: abortController.signal,\n        });\n        console.log(trendingMovies);\n        setMovies(trendingMovies);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMovies();\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <MoviesList movies={movies} to={id => `movies/${id}`} location={location} />\n  );\n};\n\nexport default Home;\n"],"names":["axios","fetchTrendingMovies","param","response","console","log","data","results","fetchMovieById","movieId","fetchMovieActorsById","cast","fetchMovieReviewsById","fetchSearchMovie","request","extraParam","params","language","query","include_adult","List","styled","MovieLink","Link","MoviesList","movies","location","to","map","title","id","state","from","useState","setMovies","useLocation","useEffect","abortController","AbortController","fetchMovies","signal","trendingMovies","message","abort"],"sourceRoot":""}